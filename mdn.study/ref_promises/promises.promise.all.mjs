// ## Promise.all([arr, of, promises]);

import fetch from 'node-fetch';

// Sometimes you need all the promises to be fulfilled,
// but they don't depend on each other. In a case like
// that it's much more efficient to start them all off together,
// then be notified when they have all fulfilled.
// The `Promise.all()` method is what you need here.
// It takes an array of promises, and returns a single promise.

// The promise returned by `Promise.all()` is:
// - fulfilled when and if all the promises in the array are fulfilled.
//   In this case the `then()` handler is called with *an array of all the responses*,
//   *in the same order* that the promises were passed into `all()`.
// - rejected when and if any of the promises in the array are rejected.
//   In this case the `catch()` handler is called with the error thrown
//   by the promise that rejected.

const fetchPromise1 = fetch('https://mdn.github.io/learning-area/javascript/apis/fetching-data/can-store/products.json');
const fetchPromise2 = fetch('https://mdn.github.io/learning-area/javascript/apis/fetching-data/can-store/not-found');
const fetchPromise3 = fetch('https://mdn.github.io/learning-area/javascript/oojs/json/superheroes.json');

Promise.all([fetchPromise1, fetchPromise2, fetchPromise3])
    .then(responses => {
        responses.forEach(response => console.log(`${response.status} ${response.url}`));
    })
    .catch(error => {
        console.error(`Failed to fetch: ${error}`);
    });

// 200 https://mdn.github.io/learning-area/javascript/apis/fetching-data/can-store/products.json
// 404 https://mdn.github.io/learning-area/javascript/apis/fetching-data/can-store/not-found
// 200 https://mdn.github.io/learning-area/javascript/oojs/json/superheroes.json

// Note: Even the request return 404 Not Found - the promise is fulfilled and no exception is generated by default.
//       In order to produce an error (for test) we could just change the protocol of any of the URLs above.
